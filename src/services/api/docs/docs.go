// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chats/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create chat",
                "parameters": [
                    {
                        "description": "Chat",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chats.CreateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/chats.CreateChatResponse"
                        }
                    }
                }
            }
        },
        "/chats/settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get available chat configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chats.CreateChatResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chats.CreateChatResponse"
                        }
                    }
                }
            }
        },
        "/users/create": {
            "get": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/users.CreateUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chats.CreateChatRequest": {
            "type": "object",
            "required": [
                "settings",
                "user_id"
            ],
            "properties": {
                "settings": {
                    "$ref": "#/definitions/flux.Settings"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "chats.CreateChatResponse": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "payment_link": {
                    "type": "string"
                }
            }
        },
        "flux.Platform": {
            "type": "string",
            "enum": [
                "domain"
            ],
            "x-enum-varnames": [
                "PlatformDomain"
            ]
        },
        "flux.Settings": {
            "type": "object",
            "required": [
                "platform"
            ],
            "properties": {
                "max_length": {
                    "type": "integer"
                },
                "platform": {
                    "maxLength": 10,
                    "allOf": [
                        {
                            "$ref": "#/definitions/flux.Platform"
                        }
                    ]
                },
                "preferred_names": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                        "type": "string"
                    }
                },
                "tld": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flux.TldSettings"
                    }
                }
            }
        },
        "flux.TldSettings": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "users.CreateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "AliasFlux API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
