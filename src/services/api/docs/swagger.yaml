basePath: /api/v1
definitions:
  chats.CreateChatRequest:
    properties:
      settings:
        $ref: '#/definitions/flux.Settings'
      user_id:
        type: string
    required:
    - settings
    - user_id
    type: object
  chats.CreateChatResponse:
    properties:
      chat_id:
        type: string
      message:
        type: string
      ok:
        type: boolean
      payment_link:
        type: string
    type: object
  flux.Platform:
    enum:
    - domain
    type: string
    x-enum-varnames:
    - PlatformDomain
  flux.Settings:
    properties:
      max_length:
        type: integer
      platform:
        allOf:
        - $ref: '#/definitions/flux.Platform'
        maxLength: 10
      preferred_names:
        items:
          type: string
        maxItems: 50
        type: array
      tld:
        items:
          $ref: '#/definitions/flux.TldSettings'
        type: array
    required:
    - platform
    type: object
  flux.TldSettings:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  users.CreateUserResponse:
    properties:
      message:
        type: string
      ok:
        type: boolean
      user_id:
        type: string
    type: object
info:
  contact: {}
  title: AliasFlux API
  version: "1.0"
paths:
  /chats/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chats.CreateChatResponse'
      summary: Get chat
      tags:
      - chats
  /chats/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Chat
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/chats.CreateChatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/chats.CreateChatResponse'
      summary: Create chat
      tags:
      - chats
  /chats/settings:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chats.CreateChatResponse'
      summary: Get available chat configurations
      tags:
      - chats
  /users/create:
    get:
      consumes:
      - application/json
      description: Create user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.CreateUserResponse'
      summary: Create user
      tags:
      - users
swagger: "2.0"
